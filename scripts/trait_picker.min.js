var traits,rarity=0,currentTraits=[];Handlebars.partials=Handlebars.templates;var xhr=new XMLHttpRequest;xhr.onreadystatechange=function(){4==xhr.readyState&&(traits=JSON.parse(xhr.responseText))};xhr.open("GET",(window.location+"").replace(/localhost|vermintideutility\.com/,"api.vermintideutility.com")+"/traits");xhr.send();document.getElementById("shield").addEventListener("click",function(){setTraitPickerOpen(!1)});
Array.prototype.slice.call(document.getElementsByName("rarity")).forEach(function(a,b,d){a.addEventListener("change",function(){switch(a.id){case "rarity_uncommon":rarity=0;clearTraits(1);break;case "rarity_rare":rarity=1;clearTraits(2);break;case "rarity_exotic":rarity=2;clearTraits(3);break;case "rarity_veteran":rarity=3,setTrait(0,traits[3][0][0],!0),setTrait(1,traits[3][0][1],!0),setTrait(2,traits[3][0][2],!0)}})});
Array.prototype.slice.call(document.getElementsByClassName("trait_button")).forEach(function(a,b,d){a.addEventListener("click",function(){showPossibleTraits(b,getPossibleTraits(b))})});
function setTrait(a,b,d){null==b?console.log("Setting trait to null"):(console.log(a),console.log(b));currentTraits[a]=b;void 0!=d&&(document.getElementById("trait"+a).style.display=d?"block":"none");if(void 0==d||d)b||(b={name:"Please select a trait..."},console.log("Resetting trait")),document.getElementById("trait"+a).innerHTML=Handlebars.templates.trait(b)}function clearTraits(a){console.log("Clearing traits");setTrait(0,null,0<a);setTrait(1,null,1<a);setTrait(2,null,2<a);currentTraits=[]}
function setTraitPickerOpen(a){document.getElementById("shield").style.display=document.getElementById("trait_picker").style.display=a?"block":"none"}
function showPossibleTraits(a,b){document.getElementById("trait_picker").innerHTML=Handlebars.templates.traits({traits:b,picker:!0});Array.prototype.slice.call(document.getElementById("trait_picker").getElementsByClassName("trait")).forEach(function(b,c,g){b.addEventListener("click",function(){console.log("index: "+a);setTrait(a,{name:b.dataset.name,description:b.dataset.description})})});setTraitPickerOpen(!0)}
function getPossibleTraits(a){for(var b=[],d=[],c=0;c<currentTraits.length;c++)c!=a&&d.push(currentTraits[c]);traits[rarity].forEach(function(a){var f=0;for(c=0;c<d.length;c++)d[c]&&f++;var e=[];for(c=0;c<a.length;c++)d.some(function(b){return b&&b.name==a[c].name&&b.description==a[c].description})?f--:e.push(a[c]);if(0==f)for(c=0;c<e.length;c++)b.some(function(a){return a.name==e[c].name&&a.description==e[c].description})||b.push(e[c])});b.sort(function(a,b){return a.name>b.name?1:b.name>a.name?
-1:0});return b}clearTraits(1);
